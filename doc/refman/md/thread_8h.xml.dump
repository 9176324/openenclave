doxygen
{
    xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance
    xsi:noNamespaceSchemaLocation=compound.xsd
    version=1.8.11
    compounddef
    {
        id=thread_8h
        kind=file
        language=C++
        compoundname
        {
            chars="thread.h"
        }
        includes
        {
            local=yes
            chars="defs.h"
        }
        includes
        {
            local=yes
            chars="types.h"
        }
        includedby
        {
            refid=enclave_8h
            local=yes
            chars="/root/openenclave/include/openenclave/enclave.h"
        }
        includedby
        {
            refid=host_8h
            local=yes
            chars="/root/openenclave/include/openenclave/host.h"
        }
        incdepgraph
        {
            node
            {
                id=35
                label
                {
                    chars="/root/openenclave/include/openenclave/thread.h"
                }
                link
                {
                    refid=thread.h
                }
                childnode
                {
                    refid=36
                    relation=include
                }
                childnode
                {
                    refid=37
                    relation=include
                }
            }
            node
            {
                id=36
                label
                {
                    chars="defs.h"
                }
            }
            node
            {
                id=37
                label
                {
                    chars="types.h"
                }
            }
        }
        invincdepgraph
        {
            node
            {
                id=39
                label
                {
                    chars="/root/openenclave/include/openenclave/enclave.h"
                }
                link
                {
                    refid=enclave_8h
                }
            }
            node
            {
                id=38
                label
                {
                    chars="/root/openenclave/include/openenclave/thread.h"
                }
                link
                {
                    refid=thread.h
                }
                childnode
                {
                    refid=39
                    relation=include
                }
                childnode
                {
                    refid=40
                    relation=include
                }
            }
            node
            {
                id=40
                label
                {
                    chars="/root/openenclave/include/openenclave/host.h"
                }
                link
                {
                    refid=host_8h
                }
            }
        }
        innerclass
        {
            refid=struct__OE__ThreadAttr
            prot=public
            chars="_OE_ThreadAttr"
        }
        innerclass
        {
            refid=struct__OE__Mutex
            prot=public
            chars="_OE_Mutex"
        }
        innerclass
        {
            refid=struct__OE__Cond
            prot=public
            chars="_OE_Cond"
        }
        sectiondef
        {
            kind=define
            memberdef
            {
                kind=define
                id=thread_8h_1a2b44f40cb0a46b88f1ab9df393f2d8bc
                prot=public
                static=no
                name
                {
                    chars="OE_ONCE_INITIALIZER"
                }
                initializer
                {
                    chars="0"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=50
                    column=9
                    bodyfile=/root/openenclave/include/openenclave/thread.h
                    bodystart=50
                    bodyend=-1
                }
            }
            memberdef
            {
                kind=define
                id=thread_8h_1aa03bbf56daf9077200d5c436380ed2a1
                prot=public
                static=no
                name
                {
                    chars="OE_SPINLOCK_INITIALIZER"
                }
                initializer
                {
                    chars="0"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=84
                    column=9
                    bodyfile=/root/openenclave/include/openenclave/thread.h
                    bodystart=84
                    bodyend=-1
                }
            }
            memberdef
            {
                kind=define
                id=thread_8h_1aead8e438f728b5946f850b9e64610694
                prot=public
                static=no
                name
                {
                    chars="OE_MUTEX_INITIALIZER"
                }
                initializer
                {
                    chars="{OE_SPINLOCK_INITIALIZER,0,{NULL,NULL},{0}}"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=146
                    column=9
                    bodyfile=/root/openenclave/include/openenclave/thread.h
                    bodystart=146
                    bodyend=-1
                }
            }
            memberdef
            {
                kind=define
                id=thread_8h_1a7f423ee45fe788da16e4406f4a3c31c4
                prot=public
                static=no
                name
                {
                    chars="OE_COND_INITIALIZER"
                }
                initializer
                {
                    chars="{OE_SPINLOCK_INITIALIZER,{NULL, NULL},{0,0,0}}"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=237
                    column=9
                    bodyfile=/root/openenclave/include/openenclave/thread.h
                    bodystart=237
                    bodyend=-1
                }
            }
            memberdef
            {
                kind=define
                id=thread_8h_1adbbd0b63569086635b31c011553ffb94
                prot=public
                static=no
                name
                {
                    chars="OE_THREADKEY_INITIALIZER"
                }
                initializer
                {
                    chars="0"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=350
                    column=9
                    bodyfile=/root/openenclave/include/openenclave/thread.h
                    bodystart=350
                    bodyend=-1
                }
            }
        }
        sectiondef
        {
            kind=var
            memberdef
            {
                kind=variable
                id=thread_8h_1a542724dc1e4ce561285abf4ddcf2e1be
                prot=public
                static=no
                mutable=no
                type
                {
                    chars="OE_EXTERNC_BEGIN typedef unsigned long"
                }
                definition
                {
                    chars="OE_EXTERNC_BEGIN typedef unsigned long OE_Thread"
                }
                argsstring
                {
                }
                name
                {
                    chars="OE_Thread"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=15
                    column=1
                    bodyfile=/root/openenclave/include/openenclave/thread.h
                    bodystart=15
                    bodyend=-1
                }
            }
        }
        sectiondef
        {
            kind=typedef
            memberdef
            {
                kind=typedef
                id=thread_8h_1af7fccd1c8de5914413964f40fed76247
                prot=public
                static=no
                type
                {
                    ref
                    {
                        refid=struct__OE__ThreadAttr
                        kindref=compound
                        chars="_OE_ThreadAttr"
                    }
                    chars="struct"
                }
                definition
                {
                    chars="typedef struct _OE_ThreadAttr\n OE_ThreadAttr"
                }
                argsstring
                {
                }
                name
                {
                    chars="OE_ThreadAttr"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=21
                    column=1
                }
            }
            memberdef
            {
                kind=typedef
                id=thread_8h_1afc581ee12037cc64c93be4e66f97c79c
                prot=public
                static=no
                type
                {
                    chars="unsigned int"
                }
                definition
                {
                    chars="typedef unsigned int OE_OnceType"
                }
                argsstring
                {
                }
                name
                {
                    chars="OE_OnceType"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=48
                    column=1
                    bodyfile=/root/openenclave/include/openenclave/thread.h
                    bodystart=48
                    bodyend=-1
                }
            }
            memberdef
            {
                kind=typedef
                id=thread_8h_1a2f7b159fe26f84c5e1052c7d6e7a18fb
                prot=public
                static=no
                type
                {
                    chars="unsigned int"
                }
                definition
                {
                    chars="typedef volatile unsigned int OE_Spinlock"
                }
                argsstring
                {
                }
                name
                {
                    chars="OE_Spinlock"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=86
                    column=1
                    bodyfile=/root/openenclave/include/openenclave/thread.h
                    bodystart=86
                    bodyend=-1
                }
            }
            memberdef
            {
                kind=typedef
                id=thread_8h_1a75499dc3d99258761eddcb1088b23a11
                prot=public
                static=no
                type
                {
                    ref
                    {
                        refid=struct__OE__Mutex
                        kindref=compound
                        chars="_OE_Mutex"
                    }
                    chars="struct"
                }
                definition
                {
                    chars="typedef struct _OE_Mutex\n OE_Mutex"
                }
                argsstring
                {
                }
                name
                {
                    chars="OE_Mutex"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=161
                    column=1
                }
            }
            memberdef
            {
                kind=typedef
                id=thread_8h_1a1089f20c6281206ad31fa4191561113a
                prot=public
                static=no
                type
                {
                    ref
                    {
                        refid=struct__OE__Cond
                        kindref=compound
                        chars="_OE_Cond"
                    }
                    chars="struct"
                }
                definition
                {
                    chars="typedef struct _OE_Cond\n OE_Cond"
                }
                argsstring
                {
                }
                name
                {
                    chars="OE_Cond"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=251
                    column=1
                }
            }
            memberdef
            {
                kind=typedef
                id=thread_8h_1a0e5b9cdf0098d8f266db89706409123e
                prot=public
                static=no
                type
                {
                    chars="unsigned int"
                }
                definition
                {
                    chars="typedef unsigned int OE_ThreadKey"
                }
                argsstring
                {
                }
                name
                {
                    chars="OE_ThreadKey"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=352
                    column=1
                    bodyfile=/root/openenclave/include/openenclave/thread.h
                    bodystart=352
                    bodyend=-1
                }
            }
        }
        sectiondef
        {
            kind=func
            memberdef
            {
                kind=function
                id=thread_8h_a6bff3d1b325e3770da54e4ec6444ea71_1a6bff3d1b325e3770da54e4ec6444ea71
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="OE_Thread"
                }
                definition
                {
                    chars="OE_Thread OE_ThreadSelf"
                }
                argsstring
                {
                    chars="(void)"
                }
                name
                {
                    chars="OE_ThreadSelf"
                }
                param
                {
                    type
                    {
                        chars="void"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Returns the identifier of the current thread."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        ref
                        {
                            refid=thread_8h_aee75629a8fef24910510c1a46b06b5ea_1aee75629a8fef24910510c1a46b06b5ea
                            kindref=member
                            chars="OE_ThreadEqual()"
                        }
                        chars="This function returns the identifier of the calling thread. Two thread identifiers can be compared for the equality by ."
                    }
                    para
                    {
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns the thread identifier of the calling thread."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=32
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_aee75629a8fef24910510c1a46b06b5ea_1aee75629a8fef24910510c1a46b06b5ea
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_ThreadEqual"
                }
                argsstring
                {
                    chars="(OE_Thread thread1, OE_Thread thread2)"
                }
                name
                {
                    chars="OE_ThreadEqual"
                }
                param
                {
                    type
                    {
                        chars="OE_Thread"
                    }
                    declname
                    {
                        chars="thread1"
                    }
                }
                param
                {
                    type
                    {
                        chars="OE_Thread"
                    }
                    declname
                    {
                        chars="thread2"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Checks two thread identifiers for equality."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        ref
                        {
                            refid=thread_8h_a6bff3d1b325e3770da54e4ec6444ea71_1a6bff3d1b325e3770da54e4ec6444ea71
                            kindref=member
                            chars="OE_ThreadSelf()"
                        }
                        chars="This function checks whether two thread identifiers refer to the same thread. Thread identifiers are obtained by calling ."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="thread1"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        ref
                                        {
                                            refid=thread_8h_a6bff3d1b325e3770da54e4ec6444ea71_1a6bff3d1b325e3770da54e4ec6444ea71
                                            kindref=member
                                            chars="OE_ThreadSelf()"
                                        }
                                        chars="A thread identifer obtained with ."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="thread2"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        ref
                                        {
                                            refid=thread_8h_a6bff3d1b325e3770da54e4ec6444ea71_1a6bff3d1b325e3770da54e4ec6444ea71
                                            kindref=member
                                            chars="OE_ThreadSelf()"
                                        }
                                        chars="A thread identifer obtained with ."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns non-zero if the thread identifiers are equal."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=46
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_a4a5122ddbe1258fb449d9a1bdb4ad782_1a4a5122ddbe1258fb449d9a1bdb4ad782
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_Once"
                }
                argsstring
                {
                    chars="(OE_OnceType *once, void(*func)(void))"
                }
                name
                {
                    chars="OE_Once"
                }
                param
                {
                    type
                    {
                        chars="OE_OnceType *"
                    }
                    declname
                    {
                        chars="once"
                    }
                }
                param
                {
                    type
                    {
                        chars="void(*)(void)"
                    }
                    declname
                    {
                        chars="func"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Calls the given function exactly once."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        bold
                        {
                            chars="func"
                        }
                        bold
                        {
                            chars="once"
                        }
                        ref
                        {
                            refid=thread_8h_a4a5122ddbe1258fb449d9a1bdb4ad782_1a4a5122ddbe1258fb449d9a1bdb4ad782
                            kindref=member
                            chars="OE_Once()"
                        }
                        ref
                        {
                            refid=thread_8h_a4a5122ddbe1258fb449d9a1bdb4ad782_1a4a5122ddbe1258fb449d9a1bdb4ad782
                            kindref=member
                            chars="OE_Once()"
                        }
                        verbatim
                        {
                            chars="static OE_OnceType _once = OE_ONCE_INITIALIZER;\n\nstatic void _Initialize(void)\n{\n    // Perform one time initialization here!\n}\n\n...\n\nOE_Once(&_once, _Initialize);"
                        }
                        chars="This function calls the function given by the  parameter exactly one time for the given  parameter, no matter how many times  is called.  may be called safely from different threads and is typically used as a thread-safe mechanism for performing one-time initialization, as in the example below."
                    }
                    para
                    {
                        ref
                        {
                            refid=thread_8h_a4a5122ddbe1258fb449d9a1bdb4ad782_1a4a5122ddbe1258fb449d9a1bdb4ad782
                            kindref=member
                            chars="OE_Once()"
                        }
                        chars="The **_Initialize** function is called by the first thread to call  for the *_once* variable."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="once"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        bold
                                        {
                                            chars="func"
                                        }
                                        chars="The variable used to synchronize one-time call to ."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=80
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_ad8ffd8e58799d4695937298e4f32e3c0_1ad8ffd8e58799d4695937298e4f32e3c0
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_SpinInit"
                }
                argsstring
                {
                    chars="(OE_Spinlock *spinlock)"
                }
                name
                {
                    chars="OE_SpinInit"
                }
                param
                {
                    type
                    {
                        chars="OE_Spinlock *"
                    }
                    declname
                    {
                        chars="spinlock"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Initializes a spin lock."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        verbatim
                        {
                            chars="static OE_Spinlock _spinlock = OE_SPINLOCK_INITIALIZER;"
                        }
                        chars="This function initializes a spin lock. Spin locks can also be initialized statically as follows."
                    }
                    para
                    {
                        ref
                        {
                            refid=thread_8h_a9cfe43dea064f147ea8b552fbe9a5e4d_1a9cfe43dea064f147ea8b552fbe9a5e4d
                            kindref=member
                            chars="OE_SpinLock()"
                        }
                        ref
                        {
                            refid=thread_8h_aee29ed4b2c09d3db4fe68b64f28eee11_1aee29ed4b2c09d3db4fe68b64f28eee11
                            kindref=member
                            chars="OE_SpinUnlock()"
                        }
                        chars="Once initialized, threads may use a spin lock to synchronize access to data. See  and ."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="spinlock"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Initialize the given spin lock."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Return zero if successful"
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=104
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_a9cfe43dea064f147ea8b552fbe9a5e4d_1a9cfe43dea064f147ea8b552fbe9a5e4d
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_SpinLock"
                }
                argsstring
                {
                    chars="(OE_Spinlock *spinlock)"
                }
                name
                {
                    chars="OE_SpinLock"
                }
                param
                {
                    type
                    {
                        chars="OE_Spinlock *"
                    }
                    declname
                    {
                        chars="spinlock"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Acquire a lock on a spin lock."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        chars="A thread calls this function to acquire a lock on a spin lock. If another thread has already acquired a lock, the calling thread spins until the lock is available. If more than one thread is waiting on the spin lock, the selection of the next thread to obtain the lock is arbitrary."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="spinlock"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Lock this spin lock."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Return zero if successful"
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=119
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_aee29ed4b2c09d3db4fe68b64f28eee11_1aee29ed4b2c09d3db4fe68b64f28eee11
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_SpinUnlock"
                }
                argsstring
                {
                    chars="(OE_Spinlock *spinlock)"
                }
                name
                {
                    chars="OE_SpinUnlock"
                }
                param
                {
                    type
                    {
                        chars="OE_Spinlock *"
                    }
                    declname
                    {
                        chars="spinlock"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Release the lock on a spin lock."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        chars="A thread calls this function to release a lock on a spin lock."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="spinlock"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Unlock this spin lock."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Return zero if successful"
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=131
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_a149708466f27e0e0598db4da53f399e5_1a149708466f27e0e0598db4da53f399e5
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_SpinDestroy"
                }
                argsstring
                {
                    chars="(OE_Spinlock *spinlock)"
                }
                name
                {
                    chars="OE_SpinDestroy"
                }
                param
                {
                    type
                    {
                        chars="OE_Spinlock *"
                    }
                    declname
                    {
                        chars="spinlock"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Destroy a spin lock."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        chars="This function destroys a spin lock."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="spinlock"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Destroy this spin lock."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Return zero if successful"
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=144
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_1a83dbeab2cd5780e1093b9767edda0d11
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                }
                definition
                {
                    chars="OE_STATIC_ASSERT"
                }
                argsstring
                {
                    chars="((sizeof(OE_Mutex)==40))"
                }
                name
                {
                    chars="OE_STATIC_ASSERT"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Mutex
                            kindref=compound
                            chars="OE_Mutex"
                        }
                        chars="(sizeof()==40)"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=164
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_ad8292b32628aac53cdbd108af6d28ac5_1ad8292b32628aac53cdbd108af6d28ac5
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_MutexInit"
                }
                argsstring
                {
                    chars="(OE_Mutex *mutex)"
                }
                name
                {
                    chars="OE_MutexInit"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Mutex
                            kindref=compound
                            chars="OE_Mutex"
                        }
                    }
                    declname
                    {
                        chars="mutex"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Initialize a mutex."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        ref
                        {
                            refid=thread_8h_a7d64c3e4796b8e037565f3828eebd678_1a7d64c3e4796b8e037565f3828eebd678
                            kindref=member
                            chars="OE_MutexLock()"
                        }
                        ref
                        {
                            refid=thread_8h_ace88edf6a4a8163d4cb6324dfc20aa7e_1ace88edf6a4a8163d4cb6324dfc20aa7e
                            kindref=member
                            chars="OE_MutexUnlock()"
                        }
                        chars="This function initializes a mutex. All mutexes are recursive. Once initialized, multiple threads can use this mutex to synchronoze access to data. See  and ."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="mutex"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Initialize this mutex."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Return zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=178
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_a7d64c3e4796b8e037565f3828eebd678_1a7d64c3e4796b8e037565f3828eebd678
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_MutexLock"
                }
                argsstring
                {
                    chars="(OE_Mutex *mutex)"
                }
                name
                {
                    chars="OE_MutexLock"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Mutex
                            kindref=compound
                            chars="OE_Mutex"
                        }
                    }
                    declname
                    {
                        chars="mutex"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Acquires a lock on a mutex."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        chars="This function acquires a lock on a mutex."
                    }
                    para
                    {
                        ref
                        {
                            refid=thread_8h_a7d64c3e4796b8e037565f3828eebd678_1a7d64c3e4796b8e037565f3828eebd678
                            kindref=member
                            chars="OE_MutexLock()"
                        }
                        chars="For enclaves,  performs an OCALL to wait for the mutex to be signaled."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="mutex"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Acquire a lock on this mutex."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=193
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_ac1af93501419169a3119ce6e6680ec35_1ac1af93501419169a3119ce6e6680ec35
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_MutexTryLock"
                }
                argsstring
                {
                    chars="(OE_Mutex *mutex)"
                }
                name
                {
                    chars="OE_MutexTryLock"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Mutex
                            kindref=compound
                            chars="OE_Mutex"
                        }
                    }
                    declname
                    {
                        chars="mutex"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Tries to acquire a lock on a mutex."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        ref
                        {
                            refid=thread_8h_a7d64c3e4796b8e037565f3828eebd678_1a7d64c3e4796b8e037565f3828eebd678
                            kindref=member
                            chars="OE_MutexLock()"
                        }
                        chars="This function attempts to acquire a lock on the given mutex if it is available. If the mutex is unavailable, the function returns immediately. Unlike , this function never performs an OCALL."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="mutex"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Acquire a lock on this mutex."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero if the lock was obtained and non-zero if not."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=207
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_ace88edf6a4a8163d4cb6324dfc20aa7e_1ace88edf6a4a8163d4cb6324dfc20aa7e
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_MutexUnlock"
                }
                argsstring
                {
                    chars="(OE_Mutex *mutex)"
                }
                name
                {
                    chars="OE_MutexUnlock"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Mutex
                            kindref=compound
                            chars="OE_Mutex"
                        }
                    }
                    declname
                    {
                        chars="mutex"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Releases a mutex."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        ref
                        {
                            refid=thread_8h_a7d64c3e4796b8e037565f3828eebd678_1a7d64c3e4796b8e037565f3828eebd678
                            kindref=member
                            chars="OE_MutexLock()"
                        }
                        ref
                        {
                            refid=thread_8h_ac1af93501419169a3119ce6e6680ec35_1ac1af93501419169a3119ce6e6680ec35
                            kindref=member
                            chars="OE_MutexTryLock()"
                        }
                        chars="This function releases the lock on a mutex obtained with either  or ."
                    }
                    para
                    {
                        chars="In enclaves, this function performs an OCALL, where it wakes the next thread waiting on a mutex."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="mutex"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Release the lock on this mutex."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=223
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_a2dc533478a292104292f0cf7097e3566_1a2dc533478a292104292f0cf7097e3566
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_MutexDestroy"
                }
                argsstring
                {
                    chars="(OE_Mutex *mutex)"
                }
                name
                {
                    chars="OE_MutexDestroy"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Mutex
                            kindref=compound
                            chars="OE_Mutex"
                        }
                    }
                    declname
                    {
                        chars="mutex"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Destroys a mutex."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        ref
                        {
                            refid=thread_8h_ad8292b32628aac53cdbd108af6d28ac5_1ad8292b32628aac53cdbd108af6d28ac5
                            kindref=member
                            chars="OE_MutexInit()"
                        }
                        chars="This function destroys a mutex that was initialized with ."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="Destroy"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="this mutex."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=235
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_1a42af170b201622a2c6d18235dd2014d5
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                }
                definition
                {
                    chars="OE_STATIC_ASSERT"
                }
                argsstring
                {
                    chars="((sizeof(OE_Cond)==48))"
                }
                name
                {
                    chars="OE_STATIC_ASSERT"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Cond
                            kindref=compound
                            chars="OE_Cond"
                        }
                        chars="(sizeof()==48)"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=254
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_a7ba30935e8809899d5c12f9f9a64f03e_1a7ba30935e8809899d5c12f9f9a64f03e
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_CondInit"
                }
                argsstring
                {
                    chars="(OE_Cond *cond)"
                }
                name
                {
                    chars="OE_CondInit"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Cond
                            kindref=compound
                            chars="OE_Cond"
                        }
                    }
                    declname
                    {
                        chars="cond"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Initializes a condition variable."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        verbatim
                        {
                            chars="OE_Cond cond = OE_COND_INITIALIZER;"
                        }
                        chars="This function initializes a condition variable. Condition variables can also be initialized statically as follows."
                    }
                    para
                    {
                        chars="Condition variables allow threads to wait on an event using a first-come first-served (FCFS) policy."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="cond"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Initialize this condition variable."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=272
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_a681a086a647cf9d4af673b130e011136_1a681a086a647cf9d4af673b130e011136
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_CondWait"
                }
                argsstring
                {
                    chars="(OE_Cond *cond, OE_Mutex *mutex)"
                }
                name
                {
                    chars="OE_CondWait"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Cond
                            kindref=compound
                            chars="OE_Cond"
                        }
                    }
                    declname
                    {
                        chars="cond"
                    }
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Mutex
                            kindref=compound
                            chars="OE_Mutex"
                        }
                    }
                    declname
                    {
                        chars="mutex"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Waits on a condition variable."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        ref
                        {
                            refid=thread_8h_a681a086a647cf9d4af673b130e011136_1a681a086a647cf9d4af673b130e011136
                            kindref=member
                            chars="OE_CondWait()"
                        }
                        bold
                        {
                            chars="mutex"
                        }
                        ref
                        {
                            refid=thread_8h_a681a086a647cf9d4af673b130e011136_1a681a086a647cf9d4af673b130e011136
                            kindref=member
                            chars="OE_CondWait()"
                        }
                        ref
                        {
                            refid=thread_8h_aec38ce9ea989cd7b7bf8911968e6744f_1aec38ce9ea989cd7b7bf8911968e6744f
                            kindref=member
                            chars="OE_CondSignal()"
                        }
                        chars="A thread calls this function to wait on a condition variable. If the condition variable is available,  returns immediately. Otherwise, the thread is placed on a first-come first-served (FCFS) queue where it waits to be signaled. The  parameter is used to synchronize access to the condition variable. The caller locks this mutex before calling , which places the thread on the waiting queue and unlocks the mutex. When the thread is signaled by , the waiting thread acquires the mutex and returns."
                    }
                    para
                    {
                        chars="In enclaves, this function performs an OCALL, where the thread waits to be signaled."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="cond"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Wait on this condition variable."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="mutex"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="This mutex must be locked by the caller."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=295
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_aec38ce9ea989cd7b7bf8911968e6744f_1aec38ce9ea989cd7b7bf8911968e6744f
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_CondSignal"
                }
                argsstring
                {
                    chars="(OE_Cond *cond)"
                }
                name
                {
                    chars="OE_CondSignal"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Cond
                            kindref=compound
                            chars="OE_Cond"
                        }
                    }
                    declname
                    {
                        chars="cond"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Signal a thread waiting on a condition variable."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        ref
                        {
                            refid=thread_8h_a681a086a647cf9d4af673b130e011136_1a681a086a647cf9d4af673b130e011136
                            kindref=member
                            chars="OE_CondWait()"
                        }
                        ref
                        {
                            refid=thread_8h_aec38ce9ea989cd7b7bf8911968e6744f_1aec38ce9ea989cd7b7bf8911968e6744f
                            kindref=member
                            chars="OE_CondSignal()"
                        }
                        ref
                        {
                            refid=thread_8h_a681a086a647cf9d4af673b130e011136_1a681a086a647cf9d4af673b130e011136
                            kindref=member
                            chars="OE_CondWait()"
                        }
                        chars="A thread calls this function to signal the next thread waiting on the given condition variable. Waiting threads call  which places them on on a first-come first-served (FCFS) queue, where they wait to be signaled.  wakes up the thread at the front of queue, causing it to return from ."
                    }
                    para
                    {
                        chars="In enclaves, this function performs an OCALL, where it wakes the next waiting thread."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="cond"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Signal this condition variable."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=316
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_a089e8fbdce8abbbc6591222dec91ddb3_1a089e8fbdce8abbbc6591222dec91ddb3
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_CondBroadcast"
                }
                argsstring
                {
                    chars="(OE_Cond *cond)"
                }
                name
                {
                    chars="OE_CondBroadcast"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Cond
                            kindref=compound
                            chars="OE_Cond"
                        }
                    }
                    declname
                    {
                        chars="cond"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Signals all threads waiting on a condition variable."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        ref
                        {
                            refid=thread_8h_a681a086a647cf9d4af673b130e011136_1a681a086a647cf9d4af673b130e011136
                            kindref=member
                            chars="OE_CondWait()"
                        }
                        ref
                        {
                            refid=thread_8h_a089e8fbdce8abbbc6591222dec91ddb3_1a089e8fbdce8abbbc6591222dec91ddb3
                            kindref=member
                            chars="OE_CondBroadcast()"
                        }
                        ref
                        {
                            refid=thread_8h_a681a086a647cf9d4af673b130e011136_1a681a086a647cf9d4af673b130e011136
                            kindref=member
                            chars="OE_CondWait()"
                        }
                        chars="A thread calls this function to signal all threads waiting on the given condition variable. Waiting threads call , which places them on a first-come first-served (FCFS) queue, where they wait to be signaled.  wakes up all threads on the queue, causing them to return from . In enclaves, this function performns an OCALL, where it wakes all waiting threads."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="cond"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The condition variable to be signaled."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=334
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_a1799c5e689755c0dd0506b99d6840b71_1a1799c5e689755c0dd0506b99d6840b71
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_CondDestroy"
                }
                argsstring
                {
                    chars="(OE_Cond *cond)"
                }
                name
                {
                    chars="OE_CondDestroy"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__Cond
                            kindref=compound
                            chars="OE_Cond"
                        }
                    }
                    declname
                    {
                        chars="cond"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Destroys a condition variable."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        chars="This function destroys the given condition variable."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="cond"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Destroy this condition variable."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=347
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_a37e5d1d2699359f2e5f584a031eb719a_1a37e5d1d2699359f2e5f584a031eb719a
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_ThreadKeyCreate"
                }
                argsstring
                {
                    chars="(OE_ThreadKey *key, void(*destructor)(void *value))"
                }
                name
                {
                    chars="OE_ThreadKeyCreate"
                }
                param
                {
                    type
                    {
                        chars="OE_ThreadKey *"
                    }
                    declname
                    {
                        chars="key"
                    }
                }
                param
                {
                    type
                    {
                        chars="void(*)(void *value)"
                    }
                    declname
                    {
                        chars="destructor"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Create a key for accessing thread-specific data."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        bold
                        {
                            chars="destructor"
                        }
                        ref
                        {
                            refid=thread_8h_a5c14c0988b9c117ae40a40a1aee0b704_1a5c14c0988b9c117ae40a40a1aee0b704
                            kindref=member
                            chars="OE_ThreadKeyDelete()"
                        }
                        chars="This function allocates a thread-specific data (TSD) entry and initializes a key for accessing it. The function given by the  parameter is called when the key is deleted by ."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="key"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Set this key to refer to the newly allocated TSD entry."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="destructor"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        ref
                                        {
                                            refid=thread_8h_a5c14c0988b9c117ae40a40a1aee0b704_1a5c14c0988b9c117ae40a40a1aee0b704
                                            kindref=member
                                            chars="OE_ThreadKeyDelete()"
                                        }
                                        chars="If non-null, call this function from ."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=367
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_a5c14c0988b9c117ae40a40a1aee0b704_1a5c14c0988b9c117ae40a40a1aee0b704
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_ThreadKeyDelete"
                }
                argsstring
                {
                    chars="(OE_ThreadKey key)"
                }
                name
                {
                    chars="OE_ThreadKeyDelete"
                }
                param
                {
                    type
                    {
                        chars="OE_ThreadKey"
                    }
                    declname
                    {
                        chars="key"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Delete a key for accessing thread-specific data."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        bold
                        {
                            chars="destructor"
                        }
                        ref
                        {
                            refid=thread_8h_a37e5d1d2699359f2e5f584a031eb719a_1a37e5d1d2699359f2e5f584a031eb719a
                            kindref=member
                            chars="OE_ThreadKeyCreate()"
                        }
                        chars="This function deletes the thread-specific data (TSD) entry associated with the given key, calling the function given by the  parameter initially passed to ."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="key"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Delete the TSD entry associated with this key."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=383
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_afe7f5e48461b5262a96ee4b56c07f373_1afe7f5e48461b5262a96ee4b56c07f373
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_ThreadSetSpecific"
                }
                argsstring
                {
                    chars="(OE_ThreadKey key, const void *value)"
                }
                name
                {
                    chars="OE_ThreadSetSpecific"
                }
                param
                {
                    type
                    {
                        chars="OE_ThreadKey"
                    }
                    declname
                    {
                        chars="key"
                    }
                }
                param
                {
                    type
                    {
                        chars="const void *"
                    }
                    declname
                    {
                        chars="value"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Sets the value of a thread-specific data entry."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        chars="This funciton sets the value of a thread-specific data (TSD) entry associated with the given key."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="key"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Set the TSD entry associated with this key."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="value"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Set the TSD entry to this value."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns zero on success."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=398
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=thread_8h_af39a5975141e08c467f807f3800410c1_1af39a5975141e08c467f807f3800410c1
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="void *"
                }
                definition
                {
                    chars="void* OE_ThreadGetSpecific"
                }
                argsstring
                {
                    chars="(OE_ThreadKey key)"
                }
                name
                {
                    chars="OE_ThreadGetSpecific"
                }
                param
                {
                    type
                    {
                        chars="OE_ThreadKey"
                    }
                    declname
                    {
                        chars="key"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Gets the value of a thread-specific data entry."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        chars="This function retrieves the value of a thread-specific data (TSD) entry associated with the given key."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="key"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Get the TSD entry value associated with this key."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns the TSD value."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/thread.h
                    line=413
                    column=1
                }
            }
        }
        briefdescription
        {
            para
            {
                chars="This file defines threading primitives used by hosts and enclaves."
            }
        }
        detaileddescription
        {
        }
        programlisting
        {
            codeline
            {
                lineno=1
            }
            codeline
            {
                lineno=7
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#ifndef_OE_THREAD_H"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=8
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#define_OE_THREAD_H"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=9
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=10
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#include"defs.h""
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=11
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#include"types.h""
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=12
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=13
                highlight
                {
                    class=normal
                    chars="OE_EXTERNC_BEGIN"
                }
            }
            codeline
            {
                lineno=14
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=15
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keyword
                    chars="typedef"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="unsigned"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="long"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_Thread;"
                }
            }
            codeline
            {
                lineno=16
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=17
                refid=struct__OE__ThreadAttr
                refkind=compound
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keyword
                    chars="typedef"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    sp
                    {
                    }
                    chars="struct"
                }
                highlight
                {
                    class=normal
                    ref
                    {
                        refid=struct__OE__ThreadAttr
                        kindref=compound
                        chars="_OE_ThreadAttr"
                    }
                    sp
                    {
                    }
                }
            }
            codeline
            {
                lineno=18
                highlight
                {
                    class=normal
                    chars="{"
                }
            }
            codeline
            {
                lineno=19
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="long"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="__impl[7];"
                }
            }
            codeline
            {
                lineno=20
                highlight
                {
                    class=normal
                    chars="}"
                }
            }
            codeline
            {
                lineno=21
                highlight
                {
                    class=normal
                    ref
                    {
                        refid=struct__OE__ThreadAttr
                        kindref=compound
                        chars="OE_ThreadAttr"
                    }
                    chars=";"
                }
            }
            codeline
            {
                lineno=22
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=32
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a6bff3d1b325e3770da54e4ec6444ea71_1a6bff3d1b325e3770da54e4ec6444ea71
                        kindref=member
                        chars="OE_ThreadSelf"
                    }
                    chars="OE_Thread("
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    chars=");"
                }
            }
            codeline
            {
                lineno=33
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=46
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_aee75629a8fef24910510c1a46b06b5ea_1aee75629a8fef24910510c1a46b06b5ea
                        kindref=member
                        chars="OE_ThreadEqual"
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="(OE_Threadthread1,OE_Threadthread2);"
                }
            }
            codeline
            {
                lineno=47
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=48
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keyword
                    chars="typedef"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="unsigned"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_OnceType;"
                }
            }
            codeline
            {
                lineno=49
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=50
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="#defineOE_ONCE_INITIALIZER0"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=51
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=80
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a4a5122ddbe1258fb449d9a1bdb4ad782_1a4a5122ddbe1258fb449d9a1bdb4ad782
                        kindref=member
                        chars="OE_Once"
                    }
                    chars="("
                }
            }
            codeline
            {
                lineno=81
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="OE_OnceType*once,"
                }
            }
            codeline
            {
                lineno=82
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="(*func)("
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    chars="));"
                }
            }
            codeline
            {
                lineno=83
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=84
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="#defineOE_SPINLOCK_INITIALIZER0"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=85
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=86
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keyword
                    chars="typedef"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    chars="volatile"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="unsigned"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_Spinlock;"
                }
            }
            codeline
            {
                lineno=87
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=104
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_ad8ffd8e58799d4695937298e4f32e3c0_1ad8ffd8e58799d4695937298e4f32e3c0
                        kindref=member
                        chars="OE_SpinInit"
                    }
                    sp
                    {
                    }
                    chars="(OE_Spinlock*spinlock);"
                }
            }
            codeline
            {
                lineno=105
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=119
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a9cfe43dea064f147ea8b552fbe9a5e4d_1a9cfe43dea064f147ea8b552fbe9a5e4d
                        kindref=member
                        chars="OE_SpinLock"
                    }
                    sp
                    {
                    }
                    chars="(OE_Spinlock*spinlock);"
                }
            }
            codeline
            {
                lineno=120
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=131
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_aee29ed4b2c09d3db4fe68b64f28eee11_1aee29ed4b2c09d3db4fe68b64f28eee11
                        kindref=member
                        chars="OE_SpinUnlock"
                    }
                    chars="("
                }
            }
            codeline
            {
                lineno=132
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="OE_Spinlock*spinlock);"
                }
            }
            codeline
            {
                lineno=133
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=144
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a149708466f27e0e0598db4da53f399e5_1a149708466f27e0e0598db4da53f399e5
                        kindref=member
                        chars="OE_SpinDestroy"
                    }
                    sp
                    {
                    }
                    chars="(OE_Spinlock*spinlock);"
                }
            }
            codeline
            {
                lineno=145
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=146
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="#defineOE_MUTEX_INITIALIZER{OE_SPINLOCK_INITIALIZER,0,{NULL,NULL},{0}}"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=147
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=148
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="/*Definitionofamutex*/"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=149
                refid=struct__OE__Mutex
                refkind=compound
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keyword
                    chars="typedef"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    sp
                    {
                    }
                    chars="struct"
                }
                highlight
                {
                    class=normal
                    ref
                    {
                        refid=struct__OE__Mutex
                        kindref=compound
                        chars="_OE_Mutex"
                    }
                }
            }
            codeline
            {
                lineno=150
                highlight
                {
                    class=normal
                    chars="{"
                }
            }
            codeline
            {
                lineno=151
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="OE_Spinlocklock;"
                }
            }
            codeline
            {
                lineno=152
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="unsigned"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="refs;"
                }
            }
            codeline
            {
                lineno=153
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="unsigned"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="__padding[16];"
                }
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="/*alignwithsystempthread_t*/"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=154
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    sp
                    {
                    }
                    chars="struct"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=155
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="{"
                }
            }
            codeline
            {
                lineno=156
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*front;"
                }
            }
            codeline
            {
                lineno=157
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*back;"
                }
            }
            codeline
            {
                lineno=158
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="}"
                }
            }
            codeline
            {
                lineno=159
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="queue;"
                }
            }
            codeline
            {
                lineno=160
                highlight
                {
                    class=normal
                    chars="}"
                }
            }
            codeline
            {
                lineno=161
                highlight
                {
                    class=normal
                    ref
                    {
                        refid=struct__OE__Mutex
                        kindref=compound
                        chars="OE_Mutex"
                    }
                    chars=";"
                }
            }
            codeline
            {
                lineno=162
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=163
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="/*Thismustbethesamesizeaspthread_mutex_tinGLIBC*/"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=164
                highlight
                {
                    class=normal
                    chars="OE_STATIC_ASSERT(("
                }
                highlight
                {
                    class=keyword
                    chars="sizeof"
                }
                highlight
                {
                    class=normal
                    ref
                    {
                        refid=struct__OE__Mutex
                        kindref=compound
                        chars="OE_Mutex"
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="()==40));"
                }
            }
            codeline
            {
                lineno=165
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=178
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_ad8292b32628aac53cdbd108af6d28ac5_1ad8292b32628aac53cdbd108af6d28ac5
                        kindref=member
                        chars="OE_MutexInit"
                    }
                    ref
                    {
                        refid=struct__OE__Mutex
                        kindref=compound
                        chars="OE_Mutex"
                    }
                    sp
                    {
                    }
                    chars="(*mutex);"
                }
            }
            codeline
            {
                lineno=179
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=193
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a7d64c3e4796b8e037565f3828eebd678_1a7d64c3e4796b8e037565f3828eebd678
                        kindref=member
                        chars="OE_MutexLock"
                    }
                    ref
                    {
                        refid=struct__OE__Mutex
                        kindref=compound
                        chars="OE_Mutex"
                    }
                    sp
                    {
                    }
                    chars="(*mutex);"
                }
            }
            codeline
            {
                lineno=194
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=207
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_ac1af93501419169a3119ce6e6680ec35_1ac1af93501419169a3119ce6e6680ec35
                        kindref=member
                        chars="OE_MutexTryLock"
                    }
                    ref
                    {
                        refid=struct__OE__Mutex
                        kindref=compound
                        chars="OE_Mutex"
                    }
                    sp
                    {
                    }
                    chars="(*mutex);"
                }
            }
            codeline
            {
                lineno=208
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=223
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_ace88edf6a4a8163d4cb6324dfc20aa7e_1ace88edf6a4a8163d4cb6324dfc20aa7e
                        kindref=member
                        chars="OE_MutexUnlock"
                    }
                    ref
                    {
                        refid=struct__OE__Mutex
                        kindref=compound
                        chars="OE_Mutex"
                    }
                    sp
                    {
                    }
                    chars="(*mutex);"
                }
            }
            codeline
            {
                lineno=224
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=235
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a2dc533478a292104292f0cf7097e3566_1a2dc533478a292104292f0cf7097e3566
                        kindref=member
                        chars="OE_MutexDestroy"
                    }
                    ref
                    {
                        refid=struct__OE__Mutex
                        kindref=compound
                        chars="OE_Mutex"
                    }
                    sp
                    {
                    }
                    chars="(*mutex);"
                }
            }
            codeline
            {
                lineno=236
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=237
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="#defineOE_COND_INITIALIZER{OE_SPINLOCK_INITIALIZER,{NULL,NULL},{0,0,0}}"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=238
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=239
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="/*Conditionvariablerepresentation*/"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=240
                refid=struct__OE__Cond
                refkind=compound
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keyword
                    chars="typedef"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    sp
                    {
                    }
                    chars="struct"
                }
                highlight
                {
                    class=normal
                    ref
                    {
                        refid=struct__OE__Cond
                        kindref=compound
                        chars="_OE_Cond"
                    }
                }
            }
            codeline
            {
                lineno=241
                highlight
                {
                    class=normal
                    chars="{"
                }
            }
            codeline
            {
                lineno=242
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="OE_Spinlocklock;"
                }
            }
            codeline
            {
                lineno=243
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    sp
                    {
                    }
                    chars="struct"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=244
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="{"
                }
            }
            codeline
            {
                lineno=245
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*front;"
                }
            }
            codeline
            {
                lineno=246
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*back;"
                }
            }
            codeline
            {
                lineno=247
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="}"
                }
            }
            codeline
            {
                lineno=248
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="queue;"
                }
            }
            codeline
            {
                lineno=249
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="unsigned"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="long"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="padding[3];"
                }
            }
            codeline
            {
                lineno=250
                highlight
                {
                    class=normal
                    chars="}"
                }
            }
            codeline
            {
                lineno=251
                highlight
                {
                    class=normal
                    ref
                    {
                        refid=struct__OE__Cond
                        kindref=compound
                        chars="OE_Cond"
                    }
                    chars=";"
                }
            }
            codeline
            {
                lineno=252
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=253
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="/*Thismustthesamesizeaspthread_cond_tinGLIBC*/"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=254
                highlight
                {
                    class=normal
                    chars="OE_STATIC_ASSERT(("
                }
                highlight
                {
                    class=keyword
                    chars="sizeof"
                }
                highlight
                {
                    class=normal
                    ref
                    {
                        refid=struct__OE__Cond
                        kindref=compound
                        chars="OE_Cond"
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="()==48));"
                }
            }
            codeline
            {
                lineno=255
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=272
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a7ba30935e8809899d5c12f9f9a64f03e_1a7ba30935e8809899d5c12f9f9a64f03e
                        kindref=member
                        chars="OE_CondInit"
                    }
                    ref
                    {
                        refid=struct__OE__Cond
                        kindref=compound
                        chars="OE_Cond"
                    }
                    sp
                    {
                    }
                    chars="(*cond);"
                }
            }
            codeline
            {
                lineno=273
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=295
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a681a086a647cf9d4af673b130e011136_1a681a086a647cf9d4af673b130e011136
                        kindref=member
                        chars="OE_CondWait"
                    }
                    chars="("
                }
            }
            codeline
            {
                lineno=296
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    ref
                    {
                        refid=struct__OE__Cond
                        kindref=compound
                        chars="OE_Cond"
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*cond,"
                }
            }
            codeline
            {
                lineno=297
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    ref
                    {
                        refid=struct__OE__Mutex
                        kindref=compound
                        chars="OE_Mutex"
                    }
                    sp
                    {
                    }
                    chars="*mutex);"
                }
            }
            codeline
            {
                lineno=298
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=316
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_aec38ce9ea989cd7b7bf8911968e6744f_1aec38ce9ea989cd7b7bf8911968e6744f
                        kindref=member
                        chars="OE_CondSignal"
                    }
                    chars="("
                }
            }
            codeline
            {
                lineno=317
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    ref
                    {
                        refid=struct__OE__Cond
                        kindref=compound
                        chars="OE_Cond"
                    }
                    sp
                    {
                    }
                    chars="*cond);"
                }
            }
            codeline
            {
                lineno=318
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=334
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a089e8fbdce8abbbc6591222dec91ddb3_1a089e8fbdce8abbbc6591222dec91ddb3
                        kindref=member
                        chars="OE_CondBroadcast"
                    }
                    chars="("
                }
            }
            codeline
            {
                lineno=335
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    ref
                    {
                        refid=struct__OE__Cond
                        kindref=compound
                        chars="OE_Cond"
                    }
                    sp
                    {
                    }
                    chars="*cond);"
                }
            }
            codeline
            {
                lineno=336
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=347
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a1799c5e689755c0dd0506b99d6840b71_1a1799c5e689755c0dd0506b99d6840b71
                        kindref=member
                        chars="OE_CondDestroy"
                    }
                    chars="("
                }
            }
            codeline
            {
                lineno=348
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    ref
                    {
                        refid=struct__OE__Cond
                        kindref=compound
                        chars="OE_Cond"
                    }
                    sp
                    {
                    }
                    chars="*cond);"
                }
            }
            codeline
            {
                lineno=349
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=350
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="#defineOE_THREADKEY_INITIALIZER0"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=351
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=352
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keyword
                    chars="typedef"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="unsigned"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_ThreadKey;"
                }
            }
            codeline
            {
                lineno=353
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=367
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a37e5d1d2699359f2e5f584a031eb719a_1a37e5d1d2699359f2e5f584a031eb719a
                        kindref=member
                        chars="OE_ThreadKeyCreate"
                    }
                    chars="("
                }
            }
            codeline
            {
                lineno=368
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="OE_ThreadKey*key,"
                }
            }
            codeline
            {
                lineno=369
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="(*destructor)("
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*value));"
                }
            }
            codeline
            {
                lineno=370
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=383
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_a5c14c0988b9c117ae40a40a1aee0b704_1a5c14c0988b9c117ae40a40a1aee0b704
                        kindref=member
                        chars="OE_ThreadKeyDelete"
                    }
                    chars="("
                }
            }
            codeline
            {
                lineno=384
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="OE_ThreadKeykey);"
                }
            }
            codeline
            {
                lineno=385
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=398
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_afe7f5e48461b5262a96ee4b56c07f373_1afe7f5e48461b5262a96ee4b56c07f373
                        kindref=member
                        chars="OE_ThreadSetSpecific"
                    }
                    chars="("
                }
            }
            codeline
            {
                lineno=399
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="OE_ThreadKeykey,"
                }
            }
            codeline
            {
                lineno=400
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*value);"
                }
            }
            codeline
            {
                lineno=401
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=413
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=thread_8h_af39a5975141e08c467f807f3800410c1_1af39a5975141e08c467f807f3800410c1
                        kindref=member
                        chars="OE_ThreadGetSpecific"
                    }
                    chars="*("
                }
            }
            codeline
            {
                lineno=414
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="OE_ThreadKeykey);"
                }
            }
            codeline
            {
                lineno=415
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=416
                highlight
                {
                    class=normal
                    chars="OE_EXTERNC_END"
                }
            }
            codeline
            {
                lineno=417
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=418
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#endif"
                }
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="/*_OE_THREAD_H*/"
                }
                highlight
                {
                    class=preprocessor
                }
            }
        }
        location
        {
            file=/root/openenclave/include/openenclave/thread.h
        }
    }
}
